Hello! Welcome to Cs. 6,823 network security. My name is Professor Philip Mack. Today is
Monday, February 24, th 2025,
and this is week number 5 for network security.
1st of all, some logistics, current assignments of is homework number one
and Lab number 2. So homework number one is due at the end of semester, but you should be doing it throughout the semester every week. You should be doing a couple of them. Lab number 2 is due next
next week. That's a second march, not May. So it's due on second March second March.
not May. And so that's next Sunday. It also has a 5% bonus for submitting it 5 days early. So that means, if you're able to submit it by Tuesday, February 25, th you have a 5 percentage points added to the top of the
assignment. You also have a 5% bonus for running an arc cash poisoning program so that there's a task for making one of the items work. If you're able to get it to work, you get a 5% bonus as well.
so there's a total of 110% for this lab assignment. If you submit it early, plus get the bonus portion of it.
Note that there are ta office hours. The ta office hours this week will be on Tuesday at 8 Pm. And there'll be another ta office hours later that week I'll send. We'll send out announcement when it's set. It's either Thursday or Friday night. I don't remember what day it is.
so for today's lesson.
We're going to continue with lesson 2 network reconnaissance, and then we'll move on to Lesson number 3. So we're picking up from where we left off last week, which was on
Udp scanning. So let's do a review. From last week last week we talked about Udp
last week we covered Udp scanning.
and this is a slide that we use to discuss Udp scanning. So essentially in Udp, there are 3 possible responses to a Udp scan. So the example we used was a Udp Dns probe.
So let's take an example. You send a Dns request to Port 53, and you get a response.
If you send a probe to Port 53, and you get a response. That means the port is open.
the port is open. If you get a response right now, remember, we'll talk about Udp, not tcp, udp.
so you send a Dns probe
port 53. You get a response. Port is open. That's the 1st condition.
Second condition.
If the port is closed.
you get an Icmp destination unreachable. So you send a Dns probe to Port 53.
You get an Icmp destination reachable. It means that the port is closed.
So 1st you get port open, you get port closed.
Then the 3rd response, the 3rd possible response that you can get from a Udp probe is no response.
and when there's no response there are a couple of possible options.
The 1st possibility is that there's a firewall underway.
There's a firewall on the way. It's blocking, and it's dropping the packets.
Another reason could be a networking error.
There's some sort of networking error. The pack got dropped from some other reason. That's not a security reason. So we don't really care about that.
A 3rd reason could be an improperly formatted packet. So how Udp works is that it is a connectionless protocol.
and the effect of that is that if a packet was mangled in some way.
the server just won't respond to it. It would just wait for you to retransmit it. So you send a Udp packet over to Port 53, and there's some sort of transmission error. A couple of bits got flipped. It doesn't make sense anymore. The server would just not respond back to it. It would just ignore it.
Now, this also has the effect
of if you sent the packet to the wrong service.
it's also not going to respond back to it.
Can someone give me another Udp port. What's another popular Udp port that you know?
Port Udp. Port 3, 5, 4, 4.
What is that?
I'm not familiar with that one?
How about another Udp port, or tell me what? 3, 5, 4, 4. Is Snmp. Port 1, 6, 1.
Okay. So Snmp. Port 6, 1, 6, 1.
Port, 1 6 1. Is it? Port? 1, 6, 1. Well, let's just go with that.
So let's say you're running an Snp.
Snmp. Server at Port 1 6 1,
let's say, for some reason you sent a Dns packet to Port 1 6 1.
Now, I don't know why you would do that, but let's just say you did.
You sent a Dns packet to Port 161, which is running an Snmp. Server.
What's going to happen?
Would you expect the result to be.
there will be no response.
Why is there no response?
Well, the Snmp server is expecting a Snmp protocol
that's being sent to it, and if you somehow accidentally send a Dns request over to the Snmp. Server.
Well, the Snmp server will just believe that it's a misformatted packet that is transmission error.
and it'll just not respond back to it
so it could be a transmission error. It could be a wrong protocol ever.
Whatever reason is, if it's not exactly the right format.
It's gonna ignore it.
Default. That's how Udp works.
And then the 3rd possibility is that we've reached the Icmp destination. Unreachable limit. So Icmp destination. Unreachables are limited to one time per second or 2 times per second in windows. So one time per second in Linux, and 2 times per second in windows. That means that
they would not send more than one icmp. Unreachable per second from Linux.
So let's expand that a little bit.
Icmp destination unreachable.
So the Icmp destination reachables Icmp destination. Unreachables are limited
to in windows. It's 2 times per second.
And in Linux to one times per second.
So essentially, we just say the limit is one time per second, Max.
And so if somehow.
somehow this will come into play when you send 2 Udp packets to 2 different closed ports.
you would not get a response, so you only get a response for one of them.
So, in effect, so the example is, if you send 2 Udp packets to 2 closed ports
at the same time, only the 1st one will respond.
The second response is dropped.
So there's a maximum of one Icnp on destination, reachable per second from Linux machines
or 2 per second for windows.
But we just basically treat it as one time per second.
Now, why is this like? Why is this?
Why is that this limit?
Does anyone know? Does anyone have an idea? Why
it has to do with a cyber attack.
So let's say, let's say I have a network over here, and within this network
I have a number of hosts
right? I think you got it. So there's a number of hosts over here.
and let's say someone from the outside the attacker, which we call Trudy.
and the attacker sends an Icmp request, sends a packet over
to the broadcast address. So 2D. Here Trudy sends a broadcast request to
every single host on the network.
and when 2D. Sends a broadcast request to everyone in network, everyone will end up responding to this request with something right? And let's say they respond with Icmp destination reachable because it's Udp.
So essentially Trudy can now get everyone on the network to respond back
to this Icmp request with an Icmp destination unreachable.
so she can get like hundreds, if not
thousands, of hosts, to respond back at the same time.
And this was a real attack that occurred
1520 years ago something like that. And because of that, because of this attack.
and I see our colleagues in the chat has got on the right. It's a dos attack, because what Trudy does is that Trudy is going to spoof a source IP address, and then they're going to have these attacks all go to the victim
over here, and all of this Icmp destination reachables
or going to a another victim.
So because of this attack, the Icmp destination reachables have been limited to one or 2 times per second, depending on your operating system. So it limits the Ddos attack to well, significantly less than what it was before.
So this is the reason why Icmp destination reachables are
are limited. Now, why am I talking about this so much? Why am I talking about this so much.
Well, I have a question for any practicing cybersecurity professionals out there.
Has anyone done a full Udp scan?
So I used to work for the army.
and one of the Department of Defense Requirements
is that you need to scan all ports when you get something from the vendor.
So let's say, for example, the army has purchased a radio from one of the
major video manufacturers. There's only like 2 of them.
and when we get delivery of this.
the army will have to, as part of the security scans do, a full port scan, because well, the vendor should have been able to specify what ports and processes are running on this radio, and therefore would do a scan for it to determine whether it's correct or not.
So let's say I do a Tcp scan
anyone have any idea? How long does it take to do a full Tcp scan on all Tcp ports?
Someone had the answer last week. Does anyone remember what the answer is.
Yeah, less than a minute.
So last week we talked about Udp scans. And these are these slides over here that we talked about the 4 possible answers for a Tcp. Probe.
and
and these probes are done simultaneously, so they are extremely fast. Less than a minute you can do all 65,000 ports.
What about Udp? Now? Remember, Udp has a limit
of how fast closed ports can be scanned.
The limit is one time per second.
So essentially, what this means is that the maximum possible speed that you can scan Udp ports is one port per second maximum.
So anyone can do some quick, Mafia, how long does it take to scan 65,000 ports.
and then we'll do some quick math
18 h, so that absolute minimum time
to scan 65,000 Udp ports is 18 h.
So let's say your job, my job.
You get a radio. You have to scan all Tcp and Udp ports. Tcp ports
you're done scanning before you even left the screen.
Udp for Udp. I set up the scanner.
and at 5 o'clock I will start the scanner to start running on Udp ports. I go home.
come back the next day, and I hope
that Nessus, or Nmap or retinal, whatever I'm using didn't crash overnight or something didn't go wrong overnight during the scan, because it takes a minimum. Remember, that's minimum
of 18 h to scan 65,000 ports.
And this is when everything's perfect. So actually, it takes much longer than 18 h when I have to do a scan on a new system, just the scanning part. I usually budget about
3 working days to do it minimum because the 18 h is the minimum amount of time. Really, the scanners really do the scan every 1.1 seconds just in case
of something like that of an issue. And then scanners are not 100% reliable when you run them for 24 h, so very often
I start the scan come back the next morning, and I hope the scan actually completed.
and often than not. It may have crashed in the middle, or it's still running, or something like that. So it takes over 18 h to scan Tcp. And Gtp ports because of this Icmp destination unreachable.
So essentially, what does this mean?
Well, people don't scan all ports.
They don't scan on ports
because it takes way too long to do so. You can't really do that on a routine basis.
And so let's say, let's say, for example, are you?
You have a piece of malware, and your piece of malware
has to be listening on the computer, on the host. For some reason, Port.
would you pick for your malware to run on.
What port would you pick if you had to run a piece of malware on the system?
Yeah. Udp port, you pick one of the high Udp ports, because
really by default, the scanners don't even scan those ports.
They don't. They don't scan the ports because it takes too long.
So when a normal port scan like you take. You take your Nesus or your retina, or or nmap, for example.
and you do a default. Scan
the default. Scan doesn't include all Udp ports. They only could. Probably they could have all Tcp ports, which is easy. It takes less than a minute, and then maybe the top 1,000 Udp ports.
No, just 1,000 ports, like just 1,000 Udb. Ports, will take a minimum of 1,000 seconds
in order to scan.
So even 1,000 is a lot like taking top 1,000 of 65,000 ports. It's already a lot.
So Udp ports are routinely not scanned.
Udp ports are routinely not scanned because of this, because it just takes too long to do.
Now I want to jump ahead here. I just want to jump ahead just a little bit.
I'm saying here that you can't scan a host
and scan all the Udp ports.
Well, how would you get all the Udp ports in
like. We still need to know it, and we don't have 18 h per system to scan like, let's say you go to a normal office right for you. You might have hundreds to a thousand thousands of servers
of workstations. How do you scan all of them
right? How do you know that someone isn't running a piece of malware on Port 60,000 there.
because, you know, no one will ever scan that point in Udp.
What would you do?
What is the strategy today to do so?
Any ideas.
any ideas?
So our colleague here has the right answer.
So we have remote scanning, remote scanning versus versus agent based agent based scanning.
So remote scanning
is the traditional way that we talk about. You have a computer, you have a scanner, and then you have your targets.
and then you have your on the right side. Here is your targets.
and then you scan the host
from the outside. So you do your port scan from the outside
of the host.
And this is the way that traditional scanning is done. Most scanning is done this way, because it's
it's cheaper plus setup and such.
But there's another way to do it.
You can also do an agent-based scan.
Does anyone use these types of scans, or anyone has experience with this.
So an agent-based scan is scanning the host from inside the host from inside the host.
In one of your lab assignments I forgot which one is it? Lab one or Lab 2. You had to look at all open ports using a command.
Do you remember what that is like? How did you see open ports on your computer?
We did this either in Lab one or Lab 2. I think it was lab one
like for one of the tasks. You had to show that your you had to show that your sync flood attack was working.
And you use that stat. That's not that dash na, or something like that.
right? So the next step can demand
list, all the ports that are open on the computer.
So the thing is like the traditional way of scanning like.
When I was scanning the radio. When I was working for the army I was scanning from the outside. So the radio was there, and I hook up my my wires to it, Ethernet or the army based rocket, Ethernet cable.
and I did the scanning from the outside of the radio.
So from outside to the radio.
that's the traditional method. And that's the way that's currently usually used today.
But
the better way to do it today is to use an agent base scan. And how that works is that you run a agent inside the computer. So inside the computer, you run a piece of a service.
You run a piece of service, and the service does the scan inside the computer exactly the same way that Netstat does it. So when you're inside the host.
you can look at the open ports in different ways. You can look at different open ports by looking directly into the sockets in the operating system. You can look at the files that are created. You can figure out much, much better
that host is doing when you're already inside the host.
So agent-based scanning is superior in almost every way, is superior in almost every way so remote. Scanning.
remote scanning is the traditional way.
Additional scanning method.
The limitations is that it's slow. It is very slow, for Udp.
Agent-based scan is the much better way.
Much better and faster can list all ports and services quickly.
But there's 1 major disadvantage.
and that is the cost. Today. The today price is that the license for an agent-based scan is approximately 10 times the cost of
the regular nmap, Nessus license.
So the cost is approximately 10 times more
so. The traditional method is, you get one nested server or you get an nmap, server.
and map, which is free, or Nessus, which costs a couple of $1,000 per year. You just use it. Actually, I think you can get it for less than $100 with a student discount. If for some reason you want to do that
and you scan something, it's
it works really well for Tcp, Udp has these limitations. So in order to get rid of these limitations, you use the agent-based scan which is essentially you're running an agent inside the computer. The 2 big vendors for this is Nessus. And
what's the other company Qualis which Nyu actually has an agreement for free training with. If you go to the Nyu cyber badges we have partnered with qualis, so Qualus will give you some training that would normally cost a couple of $1,000, but you get it for free. If you don't know what Nessus and Qualis is, you should take that training and be familiar with it.
But nested and qualus are the 2 major vendors in the vulnerability scans, and both of them have agent-based scanning that can. Well, the software runs on the host, and when it runs on the host it can scan the host from within the host, making it much more efficient and have better accuracy.
But it costs significantly more money, but
it is significantly better than the traditional scanning which is by doing a remote scan.
Our colleague has sent a link to the Nyu cyber badges program in the chat window here.
So in summary in summary, we talked about 2 major scanning types. That's the that's the Tcp scanning
which has 4 possible responses. So when you send a Tcp. Probe.
the port is either open or closed, or you get Icmp destination reachable, which
can mean a network error, or it can be a reject from the firewall.
or you get no response, which is a network error, or
the firewall is dropping the packet that's for Tcp, and then for Udp, don't get this confused for Udp.
There are 3 possible responses to a Udp probe. You can send a Udp probe and you get a response which means the port is open. You can Icmp destination reachable, which means the port is closed or you get no response, which
means you don't know what's going on when you get no response.
When you get no response, it means that either. The it's a badly formatted packet. It could be a firewalls in the way it could be a networking issue, or it can be that you reach the Icmp destination unreachable limit.
And we talked about the reason why we they were this Icmp destination. Reachable limit has been created. It's because there used to be a Ddos attack
due to Icnp destination reachables. So now they're limited to ones per second.
But this limit has caused it caused us not to be able to scan Udb ports period because it just takes way too long to scan
what else
we talked about. Other types of Nmap scan types. Another one that is very interesting is called the Ftp. Bounce, scan
the ftp. Bounce scan is when nmap logs into anonymous Ftp. Server and uses that to scan.
So this is how it works. There are some anonymous Ftp servers on the Internet. So these are Ftp servers that don't require your username password to log in. They're just
free Ftp servers that you can use on Internet. You can Google a list of these servers.
And what the attacker does, or what nmap does is that nmap logs into the Ftp server that requires no login.
and then from the Ftp. Server
it will try to open a port to the target and port, one on port 2 on part 3,
and so on.
It'll try to open the port one at a time, and then from there it can do a scan on the particular target by using another server
and like, why is this interesting? Why is this interesting?
It's interesting, because the attacker does not show a trail
to the target, like, if the target is looking at this and can see
the target can see that someone is scanning it the target.
We didn't know that it was the attacker that's doing it.
The attacker is bouncing off this Ftp. Server.
and this is one of the major themes in this class is that how can the attacker
perform its work
without the target knowing about it last week, or was it the week before we did a reconnaissance on Nyu?
Do you remember we were getting Nyus like domain names. IP addresses, phone numbers email addresses, IP address range. We're finding its servers. We're finding all the vendors. Do you remember we did that 2 weeks ago.
With that.
Do you know that if Nyu was watching what we were doing together in class?
Would they know that
we were the ones who were doing the reconnaissance at Nyu I mean, the session is recorded. So, of course, right? They would know. But
would Nyu know that it was us that was doing it like, for example.
when I was doing the Dns searches.
would Nyu know that we were doing it?
I think not right. Nyu would not know anything that we did the other day.
because we did everything through a 3rd party service.
So when we do a dns lookup.
I didn't do a Dns lookup directly from my computer. I went to a 3rd party website, whatever domain tools or something like that.
And I use that tool to do the dns lookup.
And then, when I was doing the reconnaissance on Nyu, we were doing tools like Dns Dumpster.
We were doing it with showdown.
and we're doing it with with. Who is so? These are all tools that are not associated with Nyu.
and they wouldn't know, and just like the colleague has just said that everything you did was passive.
right? We didn't intentionally probe Nyu. Well, actually, we did one. In one case we did a trace file
to Nyu Edu.
But that traceroute was done using a 3rd party website.
So
what Nyu could see was that a 3rd party website was doing the trace route to Nyu, but it wasn't from my IP address. So, except that it was all recorded.
Nyu wouldn't know that you were the ones who did this reconnaissance on Nyu.
So this is the same idea. Here, see, Nmap. Instead of doing the scan directly to the target.
Nmap
is using a Ftp server to bounce the attack over. So Attacker sent the commands to this Ftp. Server.
and by using a port command on the Ftp. Server, it's sending the request over to the target. So it's obsvocating where it's coming from by using a
a bounce server, or sometimes recalled as an innocent bystander.
This slide shows an IP header.
This is an IP header. I know there's the IP header, because it has a source and destination. IP address.
Right now you should be familiar with what each of these headers are. If you're not familiar with it, please take a look at Ipv. 4, header on Wikipedia, and just read through it to make sure that you fully understand what each of these headers are. They're not going to be directly on the test, but it's something that you should just be aware of just for this class.
And then Nmap also has an idle scan.
We're going to skip over this topic because we are running late, low on time for this lesson, which was supposed to be finished last week. So we're going to skip this. But I just very interesting. But the main picture here for this type of scan is that nmap
which is over here on the bottom left corner.
is trying to scan the target over here
via this innocent bystander or this bounce machine. So this is a technique that nmap can use which still works today.
where the attacker nmap uses an innocent bystander over here to do the scans on the target. But we're going to skip this, and there's not going to be an exam. If you're very interested, please take a look yourself.
here's some very interesting map commands here.
Sv, dash, S. Capital V is version scanning. So version scanning is used for finding the version of software that is running on the system. So, for example, not only can it tell you that Apache is running? Excuse me, not only can it tell you that a web server is running on Port 443. It will also be able to figure out the version of Apache that's running on Port 443, for example.
Dash capital! O, here stands for operating system
fingerprinting. So dash capital! O tries to detect the operating system earlier. We talked about all these weird scan types called the fin scan and Xms scan and null scan all these scan types.
Oh, I don't have it here. All these scan types
are for the purpose of trying to detect the operating system.
Top ports means the top most common ports. So this top ports 100 is the top 100 most common ports.
T. 4 is the speed. And O capital A is the file to write to question.
Question.
Hey? Maybe I have this.
Let me just jump ahead here, question by default, which ports does map scan
if you don't specify which ports to scan for nmap like what do you think?
What do you think Nmap's default is? If you don't specify what points to scan.
And the answer is not obvious.
The answer is not obvious.
What the heck.
So if you don't specify
what ports to scan for nmap, so if you tell Nmap to scan an IP address, and you don't specify what IP to scan.
Nmap will scan the top. 1,000 most common ports.
the top 1,000 most common ports
based on the survey. They did like couple of decades ago.
So essentially, the answer is, we don't know.
so they scan and map by default will scan the top 1,000 most common ports.
But I don't know what they are.
So the reality is that when you scan with Nmap
you have to specify the ports, you can't be not specifying the ports that nmap scans, because otherwise you would have no idea what ports it scans.
So you have to specify what ports they are. Otherwise you have absolutely no idea.
Firewalk Firewalk.
It's a tool that does traceroute
upset with application data. So for Lab 2, 1 of the tasks that you need to do for Lab 2 was to implement a Icmp Trace route.
So you did a trace route using Icnp pings.
You use the Tt incrementing or decrementing Ttl in order to
do the trade shot right. That was Lab 2.
Now, in the lab assignment. I had to specify an Icmp ping.
because you can actually do a ping with.
excuse me, you can actually do a trace route.
Andy protocol any protocol you can do a trace route
so you can just pick a random protocol
snmp, for example, that we just used.
And you can implement a trace route using Snmp
or any other protocol that you can think of.
And what you do is simply just increment or decrement. The Ttl
until you get a trace route using the protocol.
Firewalk is a tool that just does just that
it takes pretty much any application data or any port in Tcp or Udp, and just does a tracerop with it.
And that's it.
It's that easy. So a trace route does not need to be limited with limited to ping.
Actually in Linux.
in Linux the default for ping for a trace route is actually Udp, they don't even use Icmps for trace routes.
So they implement a Udp ping, a Udp Trace route in Linux.
So if I walk is a program that can implement a traceroute using any protocol.
And this is interesting because a trace route can go past the firewall. So if you, for example, try to do a trace route using icmp, but it's getting blocked by the firewall. Maybe you can try doing a trace route using a different protocol, and maybe it will bypass the firewall there.
So that's firewalk. It's a essentially, it's traceroute using any other application data application protocol.
Another interesting scanning tool is zap
Zap stands for Z attack proxy. There's also another very popular one called Burp proxy. But burp proxy costs $300 a year, and Zap is free. They're both essentially the same things, right, at least essentially, they have the same functionality, and zap and burp is a tool used for scanning websites, actually zap and burp. What the most interesting they do is that they can act as a proxy
for a website. So what you do with Zap is that you set up zap on your computer.
and Zap will intercept the traffic between your web browser
and the web server. So it's between your web browser and the web server, and from there you're able to manipulate the traffic between your web server and web
web server and browser. So, for example, let's say you just downloaded a form, and this form has some sort of id number in it.
What Zap can do is that it can try to do a request for each for different id numbers, and just try to keep incrementing the id numbers and try to get different websites or different results from it.
Zap and Burp
is intended to do that. It can also do some scanning, some basic vulnerability scanning as well.
That's the end of Lesson number 2,
and we're going to move on to Lesson number 3. Here the purpose of Lesson number 3 is to talk about attacks, vulnerabilities, and exploits.
So I want to. First, st I want to talk about where we are. So far we talked about the cyber, kill chain and remember, the cyber kill chain is a philosophy that the attacker needs to do a number of things in order to get onto a system
we talked about.
We talked about reconnaissance
weaponization. We didn't really talk about weaponization is turning, finding a vulnerability in order for it to exploit a weaponization could be a macro in excel file, for example, delivery is how to get a attack into the system. Delivery is kind of like sending an excel macro through email.
for example, and then exploitation. Exploitation is finding an exploit and taking advantage of it. So you can
do something. You want to the system. We are moving on to exploitation on this lesson, and then next week we're going to talk about installation and command and control.
1st exercise number one.
exercise number one is, please explain the following nmap scan types. Some of them we talked about today
connect scan sync Finn, null Xmas, and axe can
let me set a timer here for 2 min, or actually let me set a timer for 3 min for this one.
and then I want to hear your thoughts
one moment while I get the timer working
alright. I set a timer here for 3 min.
so these can cannot be explained by themselves, so you can do them in pairs, so connect, scan and sync, scan.
or a pair, and then fin, num and Xmas are a set.
and then we have Axscan, which sits by itself. So there's only 3 things here, so I give you 3 min to talk about 3 things.
So there are 3 sets of scans here sets. The 1st set is connect and sync, scan, connect, and sync scan are 2 different ways for map. To perform a scan connect is when map doesn't have
admin privileges. So Nmap needs to use the operating system's Api opening a socket in order to scan one port. So for Tcp a connect scan will take the Tcp three-way handshake and another three-way handshake to close the connection. So it's a 6 step process in order to check one port.
A syn scan is when Nmap has admin rights and is able to write directly to the wire when it writes directly to the wire. It sends a Tcp sync and then forgets about it and then wait for the response. And that's it. So a Tcp sync scan is significantly faster
than a connect scan by orders of magnitude, like 10 times faster, more than 10 times faster.
a fin, node, and Xmas scan. These scans are used for operating system identification. So the only purpose they're used for is to try to identify the operating system, so they usually are used together for them to figure out what operating system or help identify what the operating system is.
and the last one, an Axscan, an Axscan, is a stateless firewall. Ecl. Checker. An Axscan is used to check whether there are open ports in the other direction
going out to determine if there are some.
the static ports that are open, so that's what axe scan is. An axcan does not work by itself. You can't just do an axe, scan and figure anything out. You have to do. Axe, scan in conjunction with other types of scans like a Tcp. Scan a Tcp sync scan together in order for you to figure out what is going on. If you don't recall what Axscan is. We had a lengthy discussion last week, I believe, talking about an axe, scan
the objectives for lesson 3 is trying to understand.
IP address spoofing and why it's so hard to stop.
We're going to talk about different techniques to exploit systems. We'll talk about Dns in detail and talk about Dns, vulnerabilities, and Dns attacks.
And then next week, in the supplemental video, the video is already posted. By the way, we're going to talk about metasploit and nested scanning
question question, where do vulnerabilities come from?
Where do vulnerabilities come from?
Can you help me out here?
Can you can. You just list out some vulnerabilities. You can shout out or use the chat window.
Just tell me a vulnerability that you hear about that. You have heard about
like there are vulnerabilities in design like, what's an example of this? Or does anyone hear of a vulnerability lately?
Buffer overflow right? A buffer overflow.
Vulnerability usually has to do with implementation.
Hey? A buffer overflow attack, vulnerability, a buffer overflow vulnerability usually has to do with a coding error.
So it's an implementation. Error, sequel, injection.
How about sequel injection?
What kind of error, what kind of insecurity will cause a SQL injection to occur? I think it's also implementation because it's under coding error.
How about an authentication error that is authenticating in the wrong way or not doing authentication properly?
It could be an architecture issue right? Or it could be a configuration issue as well.
If your b 2 b or c 2 c is not configured correctly, then you might have some authentication issues.
not sanitizing input but for overflow SQL injection. I think that's implementation supply chain vulnerabilities. Oh.
oh, that's a good one. Maybe that's another category here, supply chain
vulnerabilities. Or maybe I can lump it in under operations.
Right? Would supply chain, be under operations, or maybe it should be its own category.
Maybe maybe it should be its own category supply chain.
I can't write with a mouse here. Supply chain.
Can someone give me an example of a supply chain vulnerability that I've heard about.
Log 4. J, yeah. Log 4. J is an example of a supply chain vulnerability. So log 4 J. Is a major vulnerability in a tiny library
that many applications used so simply by incorporating a open source application
onto your onto your system. If that application used log 4 J.
Then your system had this vulnerability as well.
But you wouldn't know about it. You have no idea. So you got this vulnerability because you incorporate another piece of software onto your system. And now you have this vulnerability.
So that is definitely a supply chain vulnerability. Let's see, how about
how about standard? Oh, someone gave us answer for mindsets, mindsets not sticking to least privileged principle. Oh, okay.
very good. So, for example, one mindset issue would be, let's say you have your it staff at your company and your it staff. They want everyone to have admin access to everything.
Well, now, I think not. Every it person should have administrative access to everything.
But sometimes you might see a company do that because it just makes things easier. Or maybe they feel like they have the right to access everything so it could be a mindset issue, right? Absolutely. Culture
could be a people.
Are people a source of insecurity? Yes, absolutely. People are certainly a source of insecurity. And the reason for that is that people control web browsers and emails. And these devices have direct access to the network.
And people can fall for phishing emails or phishing scams or scams and such. So people are a source of
insecurity.
I think we have 2 more standards and requirements. Anyone have any ideas there
any examples of insecurities that come from standards or requirements?
Okay, our colleague here mentioned proprietary code, base and standards. So, for example.
You could work for a company at as a proprietary code base.
and that's the way that your company works.
And therefore this is what you have to do.
That's it.
So there's some bit of vulnerabilities built in by just doing that.
Another example.
Could be backwards compatibility.
Let's say you're Microsoft, and you have windows.
and you require your windows to be backwards, compatible for at least 10 to 20 years in software.
So backwards, compatibility as a requirement
has some sources of vulnerabilities in it period.
There are computers that still run. Samba, Smb, there are still windows computer that has Ntlm version 2 or even version one that's running right? Very, very old. Identification protocols, because they want to ensure backwards compatibility with, like, you know, windows
windows nt, or something like that, right? Some really, really old piece of software.
So because of backwards compatibility as a requirement.
there are vulnerabilities in it just because of that requirement.
So there are a huge number of sources of insecurity.
Also. One thing I really really want to point out is configuration, security, configuration, security. So
in the Department of Defense.
There are things called stakes, standard technical implementation guides.
And what sticks are is that every time you install a software you configure something
you have to follow some security requirements or Srg security requirements guide.
So, for example, let's say, you download oracle database.
Let's say you had to install an oracle database.
Do you just install by default, and just click next for everything.
for everything, all the all the configurations absolutely not like. For example.
one of our colleagues just listed. Just put on the chat, the website where the stinks are located. Actually, I didn't know they were publicly available. But
this is dig standard technical implementation guide for oracle database.
And if someone is installing an oracle database, you have to follow this guide, and it's like a thousand pages long, and it goes through every single step in configuration on how to make sure that if you install an oracle database in the most secure way possible, and if not, at least you understand what settings or what not settings, in order to configure it properly.
One of our colleagues just mentioned that you have to limit your configuration to the features and ports that are needed. Absolutely
right, if it's the principle of least privilege. Well, one of the similar principle in which you want to limit the number of features to unless you need it, you should have it off by default, because you don't want extra things running on it because they might have security vulnerabilities
in it.
Please go ahead with a comment. If you want to speak up, or you want to write in chat.
Yeah. Yeah. Why don't you speak up? Can you all hear me? Right?
Yes, we can hear you.
Yeah, I just wanted to make a comment before the pandemic.
I used to work for Cisco as professional services.
and they had a service called Proactive Recommendation software reports so pretty much
when a customer wants to make an upgrade, you know, software upgrade Ios Xp devices.
They will request this to professional services
in order to know if there will be any impact or vulnerability by doing the upgrade of their hardware to. You know the next next.
and initially, I thought that that was a very straightforward work. But it's not.
You have to
pass through all the configuration files of all the devices, and you have to check, you know, different Tvs for different versions, but also
the configuration mode what configuration is that on the interfaces. For example, if you are using Btp version 2, and you are moving 3,008 50 to switch that to. I don't know.
X version.
then that might cause a crash. And if that device is a, you know, a core switch, you don't wanna see that in a production environment. So that's that's all I want to say. Thank you.
Thank you for sharing. So let me repeat what Miguel has mentioned. Miguel mentioned that he used to work at Cisco, and they did professional services to help customers upgrade their Cisco devices. Cisco software is called Ios. So don't get that confused with apple Ios. So the Cisco Ios firmware or software, whatever they call it. It's very complex, lots of configuration. And when you're upgrading from one version to another version
with professional services, they have to do a very, very big check to ensure that
not only is it configured in a secure manner that they're configured in such a way that doesn't cause crashes or other errors to occur. It's a very complex piece of software. And yes, the Dod does have sticks, standard technical implementation guides for all Cisco. Most of the Cisco networking devices, too, because there are huge potential for misconfigurations.
So the lesson I'm trying the bottom line I'm trying to give for you to take away here is that
if you ever need to are responsible for downloading, installing some sort of service or software or system.
you need to reference a standard configuration, guide, a security configuration, guide
a Srg. A stick from the vendor
can't be installing by defaults. Nothing you ever install
should be by default. You absolutely
need to follow some sort of configuration guide to ensure that it's being done securely. And when I say you, I don't mean you personally, I mean your organization. So you should have a process that whenever you install windows, whenever you're installing a Microsoft SQL. Server, whatever it is that you have a process to ensure that whoever's doing that work is following some sort of standard.
and there are more than one out there to ensure that it's being configured properly, because I've seen many organizations. They go. Oh, they're just stalling a Microsoft SQL. Server just download and just install it right. What configuration do you use? Oh, just whatever, you know, and it doesn't. It cannot work like that. It cannot work like that, like, for example.
for example, oracle database comes with a backup default, admin password.
and that's I'm just picking on oracle. But
many manufacturers have default passwords, default, backup passwords, and other sorts of default keys that are involved and a security configuration guide tells you. Oh, you need to change this. You need to change the certificate. You need to be aware of this, because these are ways that the system can be insecure.
So, no matter what, no matter what is being installed, there needs to be a process to ensure that the system is installed in a secure manner.
And then the second thing is that once it's installed and it's installed in a secure manner.
how can you make sure that it stays secure.
Right? So let's say you have a windows computer.
And you followed the Nsa. Secure configuration guide. Nsa. Has one also
on how to securely configure your windows computer. It's like 3,000 pages long.
And so you securely configure your windows computer.
How do you make sure
that it stays configured like the user didn't start making like admin accounts, or changing his settings or or such.
How do you? How do you ensure that anyone have any ideas
on on all major operating systems, Mac windows, Ios, Android.
There is software to ensure that system stays configured correctly. Example could be intune, for example, intune or airwatch, or one of the varieties of that, and there's many of them out there. That purpose is to ensure that a device stays configured in the way that it's supposed to be configured, and it will check for deviations, and in some cases it can fix the configuration as well.
So not only not only does. A device
needs to come needs to be configured correctly from the beginning.
Measures need to be done to ensure that it stays configured as well stays in a good configuration stays in a good baseline
general attack techniques.
So let's say, we have this computer.
And this computer is attacker over here. And this attacker is trying to spoof its source. IP address.
So this computer's IP address is 1, 4, 5, dot 13 dot, 1, 4, 5 dot 6, 7.
This computer is actually spoofing the IP address, 3, 6 dot, 2, 2 0 dot 9 dot 5 9. So it's coming from a fake source. IP address.
if it does that anything that ascends to a victim?
It's going to go back to
the real IP address. So this attacker here is sending a packet over to the victim.
and it's pretending that it's sourced. IP addresses
36 dot 2, 2 0 dot 9 dot 5 9. That is spoofing this IP address.
So when the victim is responding back to this IP address, it's actually going to the real machine over here.
So the attacker can spoof his IP address. But really it's a 1 way. It's a 1-way thing, because the victim doesn't really respond back
to the attacker if it's spoofing his IP address.
So spoofing IP addresses are generally very, very easy.
Heck, you did that in Lab one and Lab 2,
you Spoof the IP addresses in Lab one and Lab 2. It's really, really easy to do.
It's really really easy to do
so. There has been a lot of effort and still a lot of effort in order to stop. IP address moving.
One technique is called ingress filtering.
So on this chart, I'm going to talk about egress filtering and ingress, filtering.
egress, egress filtering is filtering when something leaves the network. So here, for example, on the left side, let's say that this is Nyu.
and you have this IP address
1, 2 7 dot 3, 2 dot one dot one.
And this is an IP address that should never leave the network. It should never leave the network.
So the firewall.
We'll see that. Oh, this IP address is trying to leave the network.
It should not be allowed to leave the network because it's not even supposed to be on a network.
So stopping something from leaving the network is called egress filtering.
This is almost never done.
This is almost never done, almost never.
What is sometimes done is called ingress. Filtering, ingress. Filtering
is filtering traffic that comes into your network.
So here, in this example, this
IP address 1, 2, 7 dot 3, 2 dot, one dot, one which shouldn't even be on the Internet, should not even be possible to be on the Internet
is entering the network.
And it's entering the network. And the firewall that's stopping traffic from coming into a network sees it's a 1, 2, 7, dot, 3 2 dot, one dot one sees that it's not supposed to be
the correct IP address and blocks it
because it's a 1, 2, 7 address shouldn't even be on a network. So this is ingress filtering. And this is what is more, typically done.
So isps try to stop traffic from going into the networks
rather than trying to stop traffic that leaves the networks. Almost nobody does egress filtering, which is filtering traffic that leaves the network. What's mostly done is filtering traffic that comes into the network.
So let's give an example of ingress filtering.
Let's see an example of ingress filtering. Here. We have a chart of some isps on the right side. Here we have a tier one ISP. This is your major ISP, like at, and T. Verizon level 2, like the big backbones of the Internet isps. That's tier one isps.
And then on the middle. Here you have the regional isps. These are the your local isps, like Comcast time, Warner, the local isps where they serve residential customers.
and then on the left side, you have the local networks. These are like your businesses, your small businesses that might have
a small subnet that's being given to them. Usually, like a local businesses, small offices.
businesses with more than one IP address that type of thing. So not like a home computer, but like an office building, a small office with multiple IP addresses a couple of servers and so such like that.
And how the Internet works is that here this ISP,
no sites connected to this ISP,
and it knows it's connected to these IP addresses. And so this regional ISP will occasionally send a Bgp update to the Internet to share that. These are the IP addresses that it has available to it. That is, it's advertising saying, so this regional ISP, like Comcast, is saying.
I have IP addresses, 12 dot 12 dot 0 dot 0 slash, 24 and 34 dot 34 dot 0 dot 0 slash 24. So I have these IP addresses. So it's advertising that has this, these IP addresses. And therefore, if someone wants to reach
these IP addresses, you have to go towards this ISP in order to be served. So this is how the Internet works. Essentially, the isps are advertising what IP addresses they have available.
And so that can be served. This is a normal process of the Internet.
So it tells the tier one ISP that has 12.1 2 and 34 and 34,
and subsequently this ISP on the bottom says that has the 56 dot 5 6, and the 78 dot 7, 8.
All right. So everything is working fine normally. And then so this tier one ISP receives this information. So this tier one ISP says, Oh, okay. So
you're telling me that you have 1212 and 34, dot 34. So let me just block everything but
12.12 and 34, dot 34,
right? So if you say that you only have 1212, and 34 dot 34 dot 0 dot 0 slash 24,
and block everything. But these IP addresses
right and same thing down here. So this ISP says that has the 56, 56, and the 78, 78, slash, 24,
so it should filter everything but the 56.5 6, and the 78.7 8
right? Sounds very reasonable here.
So let's say, for example, we have this IP address
56 dot 5 6 dot 0 dot 0 dot one trying to leave the network.
So some attacker is spoofing an IP address.
and it's sending 56 dot 5 6 dot 0 dot one out of this network.
and the tier one ISP sees.
Aha! Wait a minute.
This ISP told me via Bgp update
that it only has 12.12 and 34.3 4 slash. 24, therefore
56, not 56 shouldn't be here.
It should not be coming from this network, and therefore
this tier one ISP will block it.
So it's very reasonable here. This ISP previously said, I had 12.12 and 34.3 4,
and now it sees a 56 dot 5, 6.
No block it.
Okay? So everything's good here so far.
Shit.
But what if?
What if there's some attacker on this network over here on the top left corner.
An attacker decides to spoof a 34.3 4
dot 0 dot one IP. Address this IP address.
We'll make it through the regional ISP,
and all the way to the tier one ISP
in a tier, one ISP. We'll check
whether it's 12.12 and 34.3, 4,
and it says it is so. This spoofed IP address is able to get past through the filter.
so it's able to get passed through the filter.
and therefore the Spoof packet can get through.
So now
what this means is that if there's some attackers over here, so let's say Trudy is over here on this top left corner, I hijack one of these Internet IP addresses
and it's trying to use it to Spoof. Other IP addresses.
It can't just randomly Spoof, an IP address anymore.
It needs to spoof something local to it
has to spoof a local IP address. It can't just be spoofing random. IP addresses because a lot of them will get blocked, but
some of them will get through, especially if you spoof something that's a local IP address.
So that's ingress filtering English filtering works.
But ingress filtering is only implemented by the tier one isps right now.
So this is the backbone of the Internet isps that it's being implemented on the regional isps
generally have not implemented ingress filtering.
So they have not implemented the same type of filtering locally to them here.
Why do you think that's so
like? Why doesn't the the local isps like no time? Warner Comcast optimum?
Why don't they implement ingress filtering on their networks
while the tier one isps have implemented ingress filtering
like, why haven't the local ISP implement ingress filtering?
Because with data suggest Dns information and they know what IP addresses they have.
Why don't they implement it?
There could be a number of reasons.
It could be that they implement dynamic. IP addresses.
so maybe the customer may not always have the same IP address. So they have to update their records all the time.
Yeah, absolutely.
It's probably due to a customer service reason, because, like, you can imagine that
they don't fully know, or they don't have a really good updated record on
who has what IP addresses all the time.
And the thing is with these isps.
what happens if they make a mistake
like if they suddenly filtered the wrong IP address.
they would get very angry customers, and they might lose some business, or they might lose some revenue or cash, or at least at worst case could have an angry customer
with them.
So these local isps, these regional isps
have pretty much not implemented ingress filtering
only the tier one isps have implemented ingress filtering.
And so the result of this is that
attackers are able to spoof IP addresses from the local area.
So Trudy here is able to spoof. IP addresses from 12.12 and 34.3 4. But Trudy here is not able to spoof an IP address anywhere else because of ingress filtering.
But the thing is, it's frustrating. As these regional isps. They know the networks they have, but
due to various reasons, they are unable to implement ingress filtering locally.
So unfortunately, that's where ingress filtering stands today. Today. It kind of is fully implemented by the tier one isps.
but not really implemented in the local isps, meaning it's not as effective as it could be
session hijacking.
We kind of talked about this earlier when we talked about Lab One. So think of this as a review session, hijacking
session. Hijacking is trying to take control of a connection in this case a Tcp connection, and how
session hijacking works is that here we have Alice. We have Bob and Alice has a ton of connection to Bob.
The attacker
tries to hijack the connection. In order to hijack connection they need to get the correct tc sequence and acknowledgment number
to hijack the session.
and if somehow the attack was able to figure out the correct sequence and acknowledgment number to hijack the connection. It can send a command over to Bob and have Bob do.
And I'll create a file.
It can create a backdoor. It can create, do a number of things, but
this attack only works one time.
because as soon as Bob receives this command from Alice.
Bob is going to reply back.
Bob is going to reply back to Alice, saying, Ack
right a sensor. Act over to Alice
in this act. Alice. Say, wait a minute. Something's wrong here that's resynchronized, and you see a reply back from Alice to Bob. Bob sends a command back to Alice to try to resynchronize, and then a couple of times it will break. And you can see this very clearly on Wireshark.
where the connection kind of has a lot of black and red connections, and then it breaks.
Would someone confirm that you can see my slide? My slide says session hijacking.
and it has Alice and Bob over here, and lots of red marks in between them.
Okay, perfect. Thank you for confirming.
So when your attack is successful.
from a confirmation thing from your lab.
it's very easy to see that it worked because on wireshark you have all these lines of red and black, and that's the resynchronization between Alice and Bob, or they're trying to resynchronize.
But then they fail. Right? The resynchronization fails.
and then the calendar connection breaks. And at this point the calendar connection doesn't work anymore. And in most cases you should see on the calendar connection, reset by host
or by server, or something like that.
And so you can see that information now for some of you. It doesn't.
That connection closed. But at least, if your connection, if your attack worked, you should have all these red and black lines between Alice and Bob trying to resynchronize and then failing. So go for like 6 or 10 lines, and then it'll just break
right. And that's it.
So essentially, this attacker can only send one command to Bob
before the connection breaks just once, because of the resynchronization.
Exercise 2.
Since you can only hijack the tunnel connection one time.
Or actually, you can only hijack any Tcp connection on time.
How can you establish a command and control with the target?
Or that, in other words, how can you send more than one command to the target?
Think of as many ways as you can? I think I hinted at one way, but there are other ways as well. Let me set a timer here for 2 min, and then I want to hear your thoughts about it.
Set a timer here for 2 min.
another 45 seconds.
I see one good answer in the chat window. Is that another way? It's another thing you can do.
So one thing that you did on the lab assignment on Lab one task 4.
One of the things that you did was that you create a reverse shell.
and how you did. That was
how you did that was that on the tackle mission or some other machine? You ran a listener and you did this with Nutcat in Lab 4,
using Netcat. And what the attacker did was that in the one command the attacker was able to send Bob.
The command says, Open the reverse shell back to the attacker.
So you open a command back to attacker your river shell, and now in this river shell you can send as many commands as you want back to Bob.
You can now install your Bitcoin miner. You can install your malware, you can. I don't know. What do you do these days.
Mine Bitcoin, steal information, use it to send. Use it to turn into a botnet that kind of stuff, so you can send multiple commands to it. So this is what you did in Lab 4 and essentially, Lab 4 is extremely realistic. That is how a huge number of attacks work. They send one command over.
and that command says, Open the shell back to you, the attacker, to get more information to get to update, and what
that's 1 way to do it. What's another way?
What's another way?
Another way is just to install some malware onto the computer
to ask for it, to listen to other commands. I think of it as the same thing, but I guess it could be. Maybe it's considered a different thing. So you send the command over to Bob. And this one command, you install malware onto the computer, and this malware will open the port
here, and the attacker can now connect to this port and send additional commands as well.
We were talking about it earlier in the session today. If you had to open a port on this computer.
what port would you open it on?
It would be some sort of Udp high port like Udp. 6,000 something or 5, you know, something like that.
where?
Where a normal scanner wouldn't be able to see right? So you hide the port in some weird port like that.
So as an example.
yeah, that's another way to do it. That's good. What's another way to do it? What's another way to do it?
What's something else?
Here's an here's a way something I'm thinking about. Remember, it's Alice that's causing a problem here, like when the attacker is sending a command to Bob, Bob
and Alice try to talk to each other, and that's the reason that it fails because Alice is trying to resynchronize.
and Alice is giving information to Bob, saying that doesn't match what it got, and therefore the connection breaks.
so can we do something about Alice.
something the attacker can do to Alice.
Man in the middle, or what we like to call in this class attacker in the middle
is another way to say it. So aitm attacker in the middle is the preferred way rather than saying, man in the middle. So yeah, what the attacker can do is that the attacker can do Archcache poisoning.
which is what you're going to do for the extra credit in Lab 2, and then it will be the assignment for your next lab assignment as well after the midterm exam. So what arp cash poisoning does is that you can just redirect Alice to the wrong place. So the attacker
so over here in the middle is a router.
and what the attacker does is that it will poison the router, or it can poison Alice, and it'll tell Alice, or the router, and or the router to just point Alice in the wrong way.
and therefore Alice won't be able to talk to the right
IP addresses. And so Alice is essentially offline by doing archcache poisoning here.
So Alex is basically taken offline.
And so when this is done.
when Attacker talks to Alice, talk to Bob. Excuse me. When Attacker sends a command to Bob. Bob. Tries to talk to Alice.
But Alice doesn't respond.
The attacker can respond in behalf of Alice.
and therefore Bob won't have a problem with losing connection, because the attacker is pretending to be Alice.
So essentially the attacker took Alice offline.
and with the attacker took Alice offline.
Since the attacker took hours offline.
Alice is not able to cause the resorganization that will have Bob lose his connection with Alice.
So that's an arpcache poisoning kind of like a attacker in the middle attack.
But any way that the attacker can take Alice offline is good. So if the attacker
can take Alice offline, let's say by Ddos attack or by vulnerability, attack or crashes. Alice's computer
is all good. So Attacker would just go to Alice and take Alice offline
right and many ways to do it.
Ddos attack arpcache, poisoning, vulnerability, attack whatever.
Take Alice offline, and then, after they take Alice offline.
the attacker will send this connection hijacking to Bob, Bob would then try to the packet back to Alice.
But Alice doesn't respond because Alice has been taken offline using some various means. So Attacker goes and responds back on behalf of Alice. They say, yep, act okay. No problem all good.
And then the connection doesn't break.
Everything is fine.
So then, now the attacker can send another command to Bob.
Bob will act, get back to Alice.
but Alice is offline, so the tech can just respond
in lieu of Alice. And everything is fine
question
question. From the chat window there was a there was a question, how can we prevent our cache poisoning?
That's a very hard question. We're going to talk about it after the midterm exam.
One way to stop arfcache poisoning is using a Cisco feature called
I don't remember what the feature is right now, but there's a feature on Cisco devices and actually all devices in order to check for the Arp cache for the correct values to ensure that they are
sending the correct values. So there's a way to stop arpcache poisoning, but that has to be implemented on every router and every switch on the network.
and it's also an expensive feature as well.
So there is a way to stop arpcache poisoning, but it has to be a manage
device and has to be pretty much, not the cheapest one
in order to do so. So. There's almost no way to stop arpcache poisoning in your home device. So your home wi-fi your home like router the Starbucks cafes router. There's no way to stop Arcache poisoning in those networks
in order to stop our cash poisoning. You need to have a managed device. So it's a networking device that starts at a couple of $1,000
to start that will have features to stop our cash poisoning.
and after that, after you have the features it's not hard to do.
It's called dynamic Arp inspection. Thank you.
So the feature is called dynamic arm inspection. It comes from managed devices and they're expensive.
So your $50, Linksys router at home doesn't have these features.
Okay, we talked about this. We already went over this.
So all this we already discussed.
So how can we take Alice offline?
This slide talks in a number of ways that you can do a dos attack
to stop Alice from talking on network.
1, st one is a vulnerability attack, that is, send a send an exploit over to Alice and crash your computer or take over a computer or something like that.
or you can do a connection flooding. This is like a sync flood attack that you did in Lab one.
If you
do a sync flood attack to the target, it will make it not be able to talk on the network anymore.
Or you do a bandwidth flooding attack a bandwidth. Flooding attack is simply taking up all the bandwidth on the wire. You take up so much bandwidth on the wire that the target can't talk anymore.
That's a bandwidth flooding attack.
And all of these things are types of denial service attacks, dos, attacks, thoughts, attacks are very popular.
We I records for Ddos attacks are being broken at least every single year.
Recently, I think one or 2 months ago Cloudflare had the biggest ever Ddos attack ever recorded
in Internet history.
But
this is not the 1st time they made that announcement. Almost every year or every other year the records of the largest Ddos attack are growing and growing and growing.
So Ddos attacks are extremely powerful today.
Here's a reminder of what an IP header looks like. So these are fields of our IP header, and
one of the type of attacks is called a fragmentation attack.
So I want to point out the second row here. With these words.
the second column over here is called the IP id, the IP id.
and it's all part of the second column. Second row over here. The IP Id
is used for reassembling fragmented packets.
so an IP packet can be separated into multiple parts
and then reassembled into a single packet when it gets back to the destination.
By the way, do you know how big an IP packet is on the Internet
like, what is the size.
What's the transmission size or transmission unit
size of an IP packet on the Internet?
Yeah, it's 1,500 Byte.
That's right. It's 1,500 Byte. It's not an official standard. It's called the Mtu maximum transmission unit.
And even though it's not officially set anywhere, everyone follows this convention that IP packet sizes on the Internet are 1,500 Byte
period.
If you have any other setting.
you're going to cause a lot of problems.
So the whole Internet has decided together
without any official spec, that the maximum transmission unit is 1,500 Byte.
So if a IP packet is larger than than 1,500 Byte, it needs to be separated into 1,500 Byte chunks.
So example, this packet size is 4,000 Byte.
and because it's 4,000 Byte, it needed to be separated to 3 different packets of 1,500 Byte, 1,500 Byte, and
1,040 Byte.
These sizes don't add up perfectly.
because the header size is also 20 Byte. As well. So that's why it doesn't add up properly. So this 4,000 Byte packet is separate into 1,500 Byte, 1,500 Byte, and 1,040 Byte.
and each of these packets has this thing called an IP id over here has an IP Id.
and it has an offset value. So these 2 values together tell the recipient
how to put these IP packets back together properly.
So it gets these packets. It sees these 3 of them together, and then it looks at the IP id, which is over here.
and it looks at the offset, which is what order they get placed together.
and puts them together and reassembles and takes it back into the original packet.
So that's the IP id, that's the importance of the IP id, the IP id helps them put them together.
Now, if this sounds a little bit complicated.
you cannot imagine how complicated this is.
and there has been hundreds of vulnerabilities having to do with the attacker messing these values up on purpose
if they mess these values up on purpose.
Very, very likely you're going to cause a computer to crash.
So there's lots of attacks related to this.
Land. Land is attack when they have the source and destination. IP are the same.
So source and Destination IP address are the same cause the computer to crash
anyone. Remember the pang of death?
Don't tell me because I wouldn't know how old you are
when I was a child. I don't know 10 years old. I don't remember how old the pain of death was a really, really really
easy vulnerability to exploit.
And what the ping of def did was you send a ping packet that's too large to a windows computer? It will crash it with a blue screen of def.
That's it, and yes, that's it.
The ping packet was too big.
I don't remember what size it is, but it was too big. It'll just crash the whole computer.
That's it.
That's it.
That's how easy I was.
And during the time of pain of death.
When people were playing networking games like counter-strike, or something like that.
they will find the IP address, and then they'll just take the players offline by sending the ping of death to them.
Joke 2. Joke 2 sends a stream of fragmented packets, but none of them is 0. It will consume all processor capacity. So 0 is the 1st packet. So it sends a lot of fragmentations.
but none of them are 0,
as in none of them are the 1st packet. So without the 1st packet, it's unable to start the reassembly process. So it takes all these IP packets, these fragments, and it doesn't reassemble them properly because it never got the 1st packet, and therefore eventually it will crash the computer.
And then lots and lots of different variations of this teardrop, nudrop, Bonk, sync drop. And all of these are different fragmentation
issues where they send a fragment. They have overlapping fragments. They send duplicates, they send lots of things, and with lots of errors in the fragmentation. And then they will cause the computer to crash.
Even today
they're still finding more vulnerabilities related to fragmentation because it is extremely complex of a matter. So this it seems very simple. But when Attacker starts messing up with these values here it gets very, very complex.
sink flood.
We talked about sync flood. I believe in our 1st class when we talked about Lab one. So what syncflood does is, let me switch to our slides. I think we talked about it
much earlier.
A sync flood is when you send a lot of Tcp Sync packets over to our target.
and each time the target receives a sync packet it will open a connection because it's starting to get ready to open a socket, or it does open a socket, and it tries to
a way to start a connection. So every time you receive a Tcp Sync packet it takes up a socket, it takes up some CPU and resources and memory.
There's a finite number of them.
There's a finite number of them period, a normal computer, as maybe, like your normal
workstation would have maybe 40 to 50 sockets available to it.
so it can handle maybe 45 different sessions, Internet webs, browsing sessions at a time, or something like that. There's a there's a limit right? There's a limit period.
And if the attacker can send hundreds and
thousands of sync packets per second or even more. It will take over all of the resources very easily.
So what can you do about it?
This is thing called sync cookies.
Well, never mind why, I said that anyways exercise 3.
Exercise 3.
What are 2 methods that you can use to mitigate Async flood attack from that one?
So in Lab one you did a sync flood, and you had 2 different methods that you used, or you had to turn off 2 different methods in order to stop a sync flood attack.
Do you remember what they were? What were the 2 methods to stop a sink flood attack?
I think you would know this, so let me set a timer here for 1 min.
and then let me know if you know what the 2 methods are.
I'm specifically looking for the 2 methods that you use in Lab one.
So there's lots of correct answers. But the 2 methods used in that one was sync cookies.
and the second method was a connection cache
the connection cache is a reserve of the sockets
for previously connected host. So in ubuntu the default is 25%.
So 25% of the connection cache is reserved for prior connections that already were connected. So new connections can take up a maximum of 75% of the
sockets, but the remaining quarter are only reserved for previously connected. IP addresses.
So that's the connection. Cache
sync cookies, sync cookies is a way to stop sync flood attacks by stuffing a cookie into the sync app packet.
Let me talk about it from this slide over here. Let me draw a picture here.
So this is a normal Tcp 3 way handshake. And then we add with Sync, let me just talk about sync cookies.
This is a normal Tcp three-way handshake over here, and
when a host sends a Tcp Sync packet, it also has a sequence number an acknowledgement number.
Does anyone remember from your networking class? What's the sequence number? And what's the act number
in the Tcp sync packet?
Do you recall what they called it
like in the Tcp sync packet? What is the sequence number.
This is from your networking class.
and I remember
it's called the initial sequence number A, I sn a. So it's just a random number.
So, but Atcp sync packet gets sent with a sequence number of
ISNA. Which is just a random number.
and then it comes with an act number. Do you remember what the act number is?
It's a 0, right? It's a literal show, because it's actually 0 is a literal 0,
because there's no ack flag set.
So it's actually a 0.
Okay, next up, next up you get it. You send back a Tcp Sync packet.
And this Tcp sync A/C packet has a sequence and an act number.
What is the sequence number?
And what is the act number.
So question here is, what is the sequence number.
Anyone. Remember?
Yeah, the sequence number is a random number. Again, we call this isnb, so initial sequence number B is actually just a random number.
And then the act number is what what's the act? Number.
Yeah, it's a plus one.
So the act number is this number here a a plus one.
And then, lastly, you get a Tcp act number has a sequence number and an act number. What's the sequence number here? And what's the act number here?
Yeah, the sequence number is a plus one.
And what's the act number?
It's B plus one. Yeah.
So this is all the sequence and act numbers in the Tcp three-way handshake. This is a normal packet for a Tcp three-way handshake.
And what Sync cookie does is that
when the computer receives a Tcp Sync packet.
It will stuff a cookie in the initial sequence number B, this will actually be a cookie.
So it's not an actual random number, but
it's actually a sync cookie. So this is where the syncokie is placed.
and this host here generates a sync cookie, so it generates. So when sync cookies are on upon receipt of a Tcp sync packet, it generates a sync cookie.
So when Sync cookies are enabled upon receipt of a Tcp sync packet.
the host will generate a sync cookie.
The Synchl key is a function.
Single key is A is an Md. 5. Function of the IP addresses source and destination.
Port numbers, a slow time and a secret number.
a what they call a magic number, but
or magic number. But it's another way of saying secret number.
So a single key.
a Synchro key is a function
of the IP addresses Port numbers Ips ports
the slow time. So it's the kind of like the time, but it take off the least significant bits of it, meaning it takes off like the last second, or something like that, so I can't tell the second correctly, and then some secret number which is called the magic number.
or it generates this sync cookie, and they take the Sync cookie and stuffs it in here.
and then it forgets about it. It stuffs the Synchro key in the initial sequence number B, and then it forgets about it.
and then the single key will come back. If this was a legitimate.
if this was a legitimate connection, that is, there's not Attacker doing a sink flood.
then this sync cookie is going to come back over here. So this B plus one actually turns out to be sync cookie plus one back.
So it comes back over here from the host as sync cookie plus one.
So then, so when single keys are enabled.
it will only act on it when it gets this sync cookie plus one again back
before it would do anything. So when sequenques are enabled, when sip cookies are enabled.
upon receiving a Tcp sync packet, the host will generate a single key. A single key looks like this.
and then R.
The info is forgotten.
All the information is forgotten, unless until, if a sync cookie
is returned in the Tcp Act packet.
Then the host will recalculate the Sync with key and see if it matches the Sync with key
from the Tcp act packet.
So
what I'm trying to say here is that when it receives the sync, when Sync cookies are enabled, when it receives a Ttp sync packet. It will generate a sync cookie, stuffs it in here and then forgets about it
like everything's forgotten. The socket is open again.
Then, if it receives a Tcp. Act with a single key in it. It will recalculate the synchro key
to see whether this cookie is correct or not, and then, if it's correct, then
it will open the socket and do everything normally, only it. Only if the correct synchro key is returned.
will a socket be opened?
So the downside of this is that it takes more resources to do so.
and therefore, when signal keys are enabled, a web server can only handle maybe about half the number of connections as it could
when single keys are turned on. So this is why single keys are generally not enabled by default, because it takes up too much resources.
Exercise number 4. We're behind schedule by like 2 min. So let me just do this exercise. I'll give you 1 min to this exercise. This one is.
please, aside from syncflood name, describe another type of Ddos attack that you might have heard of.
Let me set a timer here for 1 min for this one, and then that will be the end of the class for today.
Okay, well, thank you. Everyone for joining me today.
So
logistics, please note that lab 2 is due on next Sunday, this coming Sunday, March second, there is a 5% bonus for submitting it 5 days early. So if you submit it by Tuesday tomorrow, you can have a 5 percentage points just for submitting it early.
There's also an extra credit for another 5 percentage points for this lab assignment as well. We have 2 ta office hours
this week. We have one tomorrow, Tuesday at 8 pm. And then we have another one later this week as well. We'll send out announcement when we know the exact schedule.
Thank you very much for joining me today. I hope you have a wonderful week, and I'll see you next time.
Take care, everyone.